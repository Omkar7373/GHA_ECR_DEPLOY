name: Build and Push Docker Image
description: Build and push a Docker image to Amazon ECR

inputs:
  image:
    description: Image name
    required: true
  context:
    description: The context for the docker build (build directory)
    required: true
    default: .
  dockerfile:
    description: The path to the Dockerfile
    required: true
    default: Dockerfile
  commit_sha:
    description: Specific commit SHA to build from
    required: true
  build-args:
    description: Build arguments to pass to the Dockerfile (new-line delimited string)
    required: false
    default: ""
  push:
    description: Whether to push the image to registry
    required: false
    default: false
    type: boolean
  arch:
    description: The architecture to build for (exactly one of amd64 or arm64)
    required: true

  # outputs:
  #   tag:
  #     description: The tag of the Docker image
  #     value: ${{ steps.save-output.outputs.tag }}

runs:
  using: composite
  steps:
    - name: Login to Amazon ECR Private
      # id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Extract Docker image metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: 750187922702.dkr.ecr.ap-south-1.amazonaws.com/lerndemo/${{ inputs.image }}
        labels: |
          org.opencontainers.image.revision=${{ inputs.commit_sha }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        build-args: ${{ inputs.build-args }}
        file: ${{ inputs.dockerfile }}
        tags: 750187922702.dkr.ecr.ap-south-1.amazonaws.com/lerndemo/${{ inputs.image }}
        push: ${{ inputs.push }}
        platforms: linux/${{ inputs.arch }}
        provenance: false
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=registry,ref=750187922702.dkr.ecr.ap-south-1.amazonaws.com/lerndemo/${{ inputs.image }}:cache-${{ inputs.arch }}
          type=registry,ref=750187922702.dkr.ecr.ap-south-1.amazonaws.com/lerndemo/${{ inputs.image }}:main-${{ inputs.arch }}
        cache-to: |
          type=registry,ref=750187922702.dkr.ecr.ap-south-1.amazonaws.com/lerndemo/${{ inputs.image }}:cache-${{ inputs.arch }},mode=max,image-manifest=true,oci-mediatypes=true
        outputs: type=image,push-by-digest=true,name-canonical=true,push=${{ inputs.push }}
    - name: Export digest
      shell: bash
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"
    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ inputs.image }}-${{ inputs.arch }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1
